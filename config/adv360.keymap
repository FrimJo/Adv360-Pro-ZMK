#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        next_input_to_swedish_layer: next_input_to_swedish_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(SPACE)) &tog 4>;
            label = "NEXT_INPUT_TO_SWEDISH_LAYER";
        };

        next_input_to_default_layer: next_input_to_default_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(SPACE)) &tog 0>;
            label = "NEXT_INPUT_TO_DEFAULT_LAYER";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lk: layer_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&tog>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2              &kp N3          &kp N4            &kp N5  &tog 1                                                                                             &mo 3              &kp N6  &kp N7             &kp N8           &kp N9               &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W               &kp E           &kp R             &kp T   &kp LS(LA(LC(M)))                                                                                  &none              &kp Y   &kp U              &kp I            &kp O                &kp P     &kp BSLH
&kp ESC    &kp A      &hm LEFT_CONTROL S  &hm LEFT_ALT D  &hm LEFT_SHIFT F  &kp G   &kp LS(LA(LC(I)))  &none             &none             &none             &none                     &kp LS(LA(LC(U)))  &kp H   &hm RIGHT_SHIFT J  &hm RIGHT_ALT K  &hm RIGHT_CONTROL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X               &kp C           &kp V             &kp B                                        &none             &none                                                          &kp N   &kp M              &kp COMMA        &kp DOT              &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &mo 6               &kp LEFT        &kp DOWN                  &kp SPACE          &kp LEFT_COMMAND  &kp CAPSLOCK      &kp LG(CAPSLOCK)  &hm RIGHT_COMMAND RETURN  &lt 6 BACKSPACE            &kp UP             &kp RIGHT        &kp LBKT             &kp RBKT  &mo 5
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3  &kp N4  &kp N5  &trans                                      &mo 3   &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E   &kp R   &kp T   &none                                       &none   &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D   &kp F   &kp G   &none   &trans  &trans      &trans  &trans  &none   &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C   &kp V   &kp B                   &trans      &trans                  &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans      &trans        &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_DEC  &bl BL_INC  &none  &none  &none
            >;
        };

        Swedish {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &tog 1                                      &mo 3   &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E   &kp R   &kp T   &none                                       &trans  &kp Y   &kp U   &kp I      &kp O     &kp P     &kp LBKT
&kp ESC    &kp A      &kp S   &kp D   &kp F   &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &kp BSLH  &kp RBKT  &mo 2
            >;
        };

        mac_fn {
            bindings = <
&kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &none   &none   &bl BL_DEC  &bl BL_INC  &trans                                      &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans         &trans                &trans  &trans  &trans      &trans      &trans                                      &trans  &trans      &trans            &trans      &trans      &trans             &trans
&trans         &trans                &trans  &trans  &trans      &trans      &trans  &trans  &trans      &trans  &trans  &trans  &trans      &trans            &trans      &trans      &trans             &trans
&trans         &trans                &trans  &trans  &trans      &trans                      &trans      &trans                  &trans      &trans            &trans      &trans      &trans             &trans
&trans         &trans                &trans  &trans  &trans                  &trans  &trans  &trans      &trans  &trans  &trans              &trans            &trans      &trans      &trans             &trans
            >;
        };

        Symbols {
            bindings = <
&trans  &trans  &trans  &trans                &trans                 &trans  &trans                                      &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans                                      &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                  &trans      &trans                  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans                &trans                         &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans        &trans     &trans  &trans
            >;
        };
    };
};
